package com.eureton.warmaodds.services.impl;

import com.eureton.warmaodds.services.DiceService;

public class LookupDiceService implements DiceService {
	
	@Override
	public float hit(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = hit1d6(r); break;
		case 2: p = hit2d6(r); break;
		case 3: p = hit3d6(r); break;
		case 4: p = hit4d6(r); break;
		case 5: p = hit5d6(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float hitRr(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = hit1d6rr(r); break;
		case 2: p = hit2d6rr(r); break;
		case 3: p = hit3d6rr(r); break;
		case 4: p = hit4d6rr(r); break;
		case 5: p = hit5d6rr(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float hitDl(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p =         0.f; break;
		case 2: p = hit2d6dl(r); break;
		case 3: p = hit3d6dl(r); break;
		case 4: p = hit4d6dl(r); break;
		case 5: p = hit5d6dl(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float hitDh(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p =         0.f; break;
		case 2: p = hit2d6dh(r); break;
		case 3: p = hit3d6dh(r); break;
		case 4: p = hit4d6dh(r); break;
		case 5: p = hit5d6dh(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmg(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = dmg1d6(r); break;
		case 2: p = dmg2d6(r); break;
		case 3: p = dmg3d6(r); break;
		case 4: p = dmg4d6(r); break;
		case 5: p = dmg5d6(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmgRr(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = dmg1d6rr(r); break;
		case 2: p = dmg2d6rr(r); break;
		case 3: p = dmg3d6rr(r); break;
		case 4: p = dmg4d6rr(r); break;
		case 5: p = dmg5d6rr(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmgDl(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p =			0.f; break;
		case 2: p = dmg2d6dl(r); break;
		case 3: p = dmg3d6dl(r); break;
		case 4: p = dmg4d6dl(r); break;
		case 5: p = dmg5d6dl(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmgCum(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = dmgCum1d6(r); break;
		case 2: p = dmgCum2d6(r); break;
		case 3: p = dmgCum3d6(r); break;
		case 4: p = dmgCum4d6(r); break;
		case 5: p = dmgCum5d6(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmgCumRr(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p = dmgCum1d6rr(r); break;
		case 2: p = dmgCum2d6rr(r); break;
		case 3: p = dmgCum3d6rr(r); break;
		case 4: p = dmgCum4d6rr(r); break;
		case 5: p = dmgCum5d6rr(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float dmgCumDl(int r, int n) {
		float p = 0.f;

		switch (n) {
		case 1: p =			   0.f; break;
		case 2: p = dmgCum2d6dl(r); break;
		case 3: p = dmgCum3d6dl(r); break;
		case 4: p = dmgCum4d6dl(r); break;
		case 5: p = dmgCum5d6dl(r); break;
		default: throw new IllegalArgumentException();
		}

		return p;
	}

	@Override
	public float crit(int r, int n) {
		float p = 0.f;
		
		switch (n) {
		case 1: p = 0.f; break;
		case 2: p = crit2d6(r); break;
		case 3: p = crit3d6(r); break;
		case 4: p = crit4d6(r); break;
		case 5: p = crit5d6(r); break;
		default: throw new IllegalArgumentException("Unknown value: " + n);
		}
		
		return p;
	}

	@Override
	public float crit_rr(int r, int n) {
		float p = 0.f;
		
		switch (n) {
		case 1: p = 0.f; break;
		case 2: p = crit2d6r(r); break;
		case 3: p = crit3d6r(r); break;
		case 4: p = crit4d6r(r); break;
		case 5: p = crit5d6r(r); break;
		default: throw new IllegalArgumentException("Unknown value: " + n);
		}
		
		return p;
	}

	@Override
	public float crit_dl(int r, int n) {
		float p = 0.f;
		
		switch (n) {
		case 1: 
		case 2: p = 0.f; break;
		case 3: p = crit3d6dl(r); break;
		case 4: p = crit4d6dl(r); break;
		case 5: p = crit5d6dl(r); break;
		default: throw new IllegalArgumentException("Unknown value: " + n);
		}
		
		return p;
	}

	@Override
	public float crit_dh(int r, int n) {
		float p = 0.f;
		
		switch (n) {
		case 1: 
		case 2: p = 0.f; break;
		case 3: p = crit3d6dh(r); break;
		case 4: p = crit4d6dh(r); break;
		case 5: p = crit5d6dh(r); break;
		default: throw new IllegalArgumentException("Unknown value: " + n);
		}
		
		return p;
	}
	
	@Override
	public int min(int n) { return min(n, 6); }

	@Override
	public int max(int n) { return max(n, 6); }
	
	@Override
	public int min(int n, int s) { return n; }
	
	@Override
	public int max(int n, int s) { return n * s; }

	private float hit1d6(int r) {
		float[] ps = {
			5.f / 6,	// <=0+
			5.f / 6,	// 1+
			5.f / 6,	// 2+
			4.f / 6,	// 3+
			3.f / 6,	// 4+
			2.f / 6,	// 5+
			1.f / 6,	// 6+
			0.f			// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit2d6(int r) {
		float[] ps = {
			35.f / 36, // <=0+
			35.f / 36, // 1+
			35.f / 36, // 2+
			35.f / 36, // 3+
			33.f / 36, // 4+
			30.f / 36, // 5+
			26.f / 36, // 6+
			21.f / 36, // 7+
			15.f / 36, // 8+
			10.f / 36, // 9+
			 6.f / 36, // 10+
			 3.f / 36, // 11+
			 1.f / 36, // 12+
			 1.f / 36  // 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit3d6(int r) {
		float[] ps = {
			215.f / 216, // <=0+
			215.f / 216, // 1+
			215.f / 216, // 2+
			215.f / 216, // 3+
			215.f / 216, // 4+
			212.f / 216, // 5+
			206.f / 216, // 6+
			196.f / 216, // 7+
			181.f / 216, // 8+
			160.f / 216, // 9+
			135.f / 216, // 10+
			108.f / 216, // 11+
			 81.f / 216, // 12+
			 56.f / 216, // 13+
			 35.f / 216, // 14+
			 20.f / 216, // 15+
			 10.f / 216, // 16+
			  4.f / 216, // 17+
			  1.f / 216, // 18+
			  1.f / 216  // 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit4d6(int r) {
		float[] ps = {
			1295.f / 1296, // <=0+
			1295.f / 1296, // 1+
			1295.f / 1296, // 2+
			1295.f / 1296, // 3+
			1295.f / 1296, // 4+
			1295.f / 1296, // 5+
			1291.f / 1296, // 6+
			1281.f / 1296, // 7+
			1261.f / 1296, // 8+
			1226.f / 1296, // 9+
			1170.f / 1296, // 10+
			1090.f / 1296, // 11+
			 986.f / 1296, // 12+
			 861.f / 1296, // 13+
			 721.f / 1296, // 14+
			 575.f / 1296, // 15+
			 435.f / 1296, // 16+
			 310.f / 1296, // 17+
			 206.f / 1296, // 18+
			 126.f / 1296, // 19+
			  70.f / 1296, // 20+
			  35.f / 1296, // 21+
			  15.f / 1296, // 22+
			   5.f / 1296, // 23+
			   1.f / 1296, // 24+
			   1.f / 1296  // 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit5d6(int r) {
		float[] ps = {
			7775.f / 7776, // <=0+
			7775.f / 7776, // 1+
			7775.f / 7776, // 2+
			7775.f / 7776, // 3+
			7775.f / 7776, // 4+
			7775.f / 7776, // 5+
			7775.f / 7776, // 6+
			7770.f / 7776, // 7+
			7755.f / 7776, // 8+
			7720.f / 7776, // 9+
			7650.f / 7776, // 10+
			7524.f / 7776, // 11+
			7319.f / 7776, // 12+
			7014.f / 7776, // 13+
			6594.f / 7776, // 14+
			6054.f / 7776, // 15+
			5403.f / 7776, // 16+
			4668.f / 7776, // 17+
			3888.f / 7776, // 18+
			3108.f / 7776, // 19+
			2373.f / 7776, // 20+
			1722.f / 7776, // 21+
			1182.f / 7776, // 22+
			 762.f / 7776, // 23+
			 457.f / 7776, // 24+
			 252.f / 7776, // 25+
			 126.f / 7776, // 26+
			  56.f / 7776, // 27+
			  21.f / 7776, // 28+
			   6.f / 7776, // 29+
			   1.f / 7776, // 30+
			   1.f / 7776  // 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit1d6rr(int r) {
		float[] ps = {
			5.f / 6 + 5.f / 36, // <=0+
			5.f / 6 + 5.f / 36, // 1+
			5.f / 6 + 5.f / 36, // 2+
			4.f / 6 + 8.f / 36, // 3+
			3.f / 6 + 9.f / 36, // 4+
			2.f / 6 + 8.f / 36, // 5+
			1.f / 6 + 5.f / 36, // 6+
			0.f					// >6+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit2d6rr(int r) {
		float[] ps = {
			35.f / 36 +  35.f / 1296, // <=0+
			35.f / 36 +  35.f / 1296, // 1+
			35.f / 36 +  35.f / 1296, // 2+
			35.f / 36 +  35.f / 1296, // 3+
			33.f / 36 +  99.f / 1296, // 4+
			30.f / 36 + 180.f / 1296, // 5+
			26.f / 36 + 260.f / 1296, // 6+
			21.f / 36 + 315.f / 1296, // 7+
			15.f / 36 + 315.f / 1296, // 8+
			10.f / 36 + 260.f / 1296, // 9+
			 6.f / 36 + 180.f / 1296, // 10+
			 3.f / 36 +  99.f / 1296, // 11+
			 1.f / 36 +  35.f / 1296, // 12+
			 1.f / 36 +  35.f / 1296  // >12+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit3d6rr(int r) {
		float[] ps = {
			215.f / 216 +   215.f / 46656, // <=0+
			215.f / 216 +   215.f / 46656, // 1+
			215.f / 216 +   215.f / 46656, // 2+
			215.f / 216 +   215.f / 46656, // 3+
			215.f / 216 +   215.f / 46656, // 4+
			212.f / 216 +   848.f / 46656, // 5+
			206.f / 216 +  2060.f / 46656, // 6+
			196.f / 216 +  3920.f / 46656, // 7+
			181.f / 216 +  6335.f / 46656, // 8+
			160.f / 216 +  8960.f / 46656, // 9+
			135.f / 216 + 10935.f / 46656, // 10+
			108.f / 216 + 11664.f / 46656, // 11+
			 81.f / 216 + 10935.f / 46656, // 12+
			 56.f / 216 +  8960.f / 46656, // 13+
			 35.f / 216 +  6335.f / 46656, // 14+
			 20.f / 216 +  3920.f / 46656, // 15+
			 10.f / 216 +  2060.f / 46656, // 16+
			  4.f / 216 +   848.f / 46656, // 17+
			  1.f / 216 +   215.f / 46656, // 18+
			  1.f / 216 +   215.f / 46656  // >18+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit4d6rr(int r) {
		float[] ps = {
			1295.f / 1296 +   1295.f / 1679616, // <=0+
			1295.f / 1296 +   1295.f / 1679616, // 1+
			1295.f / 1296 +   1295.f / 1679616, // 2+
			1295.f / 1296 +   1295.f / 1679616, // 3+
			1295.f / 1296 +   1295.f / 1679616, // 4+
			1295.f / 1296 +   1295.f / 1679616, // 5+
			1291.f / 1296 +   6455.f / 1679616, // 6+
			1281.f / 1296 +  19215.f / 1679616, // 7+
			1261.f / 1296 +  44135.f / 1679616, // 8+
			1226.f / 1296 +  85820.f / 1679616, // 9+
			1170.f / 1296 + 147420.f / 1679616, // 10+
			1090.f / 1296 + 224540.f / 1679616, // 11+
			 986.f / 1296 + 305660.f / 1679616, // 12+
			 861.f / 1296 + 374535.f / 1679616, // 13+
			 721.f / 1296 + 414575.f / 1679616, // 14+
			 575.f / 1296 + 414545.f / 1679616, // 15+
			 435.f / 1296 + 374535.f / 1679616, // 16+
			 310.f / 1296 + 305660.f / 1679616, // 17+
			 206.f / 1296 + 224540.f / 1679616, // 18+
			 126.f / 1296 + 147420.f / 1679616, // 19+
			  70.f / 1296 +  85820.f / 1679616, // 20+
			  35.f / 1296 +  44135.f / 1679616, // 21+
			  15.f / 1296 +  19215.f / 1679616, // 22+
			   5.f / 1296 +   6455.f / 1679616, // 23+
			   1.f / 1296 +   1295.f / 1679616, // 24+
			   1.f / 1296 +   1295.f / 1679616  // >24+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit5d6rr(int r) {
		float[] ps = {
			7775.f / 7776 +     7775.f / 60466176, // <=0+
			7775.f / 7776 +     7775.f / 60466176, // 1+
			7775.f / 7776 +     7775.f / 60466176, // 2+
			7775.f / 7776 +     7775.f / 60466176, // 3+
			7775.f / 7776 +     7775.f / 60466176, // 4+
			7775.f / 7776 +     7775.f / 60466176, // 5+
			7775.f / 7776 +     7775.f / 60466176, // 6+
			7770.f / 7776 +    46620.f / 60466176, // 7+
			7755.f / 7776 +   162855.f / 60466176, // 8+
			7720.f / 7776 +   432320.f / 60466176, // 9+
			7650.f / 7776 +   963900.f / 60466176, // 10+
			7524.f / 7776 +  1896048.f / 60466176, // 11+
			7319.f / 7776 +  3344783.f / 60466176, // 12+
			7014.f / 7776 +  5344668.f / 60466176, // 13+
			6594.f / 7776 +  7794108.f / 60466176, // 14+
			6054.f / 7776 + 10424988.f / 60466176, // 15+
			5403.f / 7776 + 12821319.f / 60466176, // 16+
			4668.f / 7776 + 14508144.f / 60466176, // 17+
			3888.f / 7776 + 15116544.f / 60466176, // 18+
			3108.f / 7776 + 14508144.f / 60466176, // 19+
			2373.f / 7776 + 12821319.f / 60466176, // 20+
			1722.f / 7776 + 10424988.f / 60466176, // 21+
			1182.f / 7776 +  7794108.f / 60466176, // 22+
			 762.f / 7776 +  5344668.f / 60466176, // 23+
			 457.f / 7776 +  3344783.f / 60466176, // 24+
			 252.f / 7776 +  1896048.f / 60466176, // 25+
			 126.f / 7776 +   963900.f / 60466176, // 26+
			  56.f / 7776 +   432320.f / 60466176, // 27+
			  21.f / 7776 +   162855.f / 60466176, // 28+
			   6.f / 7776 +    46620.f / 60466176, // 29+
			   1.f / 7776 +     7775.f / 60466176, // 30+
			   1.f / 7776 +     7775.f / 60466176  // >30+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit2d6dl(int r) {
		float[] ps = {
			35.f / 36, // <=0+
			35.f / 36, // 1+
			35.f / 36, // 2+
			32.f / 36, // 3+
			27.f / 36, // 4+
			20.f / 36, // 5+
			11.f / 36, // 6+
			 0.f / 36, // 7+
			 0.f / 36, // 8+
			 0.f / 36, // 9+
			 0.f / 36, // 10+
			 0.f / 36, // 11+
			 0.f / 36, // 12+
			 0.f / 36  // >12+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit3d6dl(int r) {
		float[] ps = {
			215.f / 216, // <=0+
			215.f / 216, // 1+
			215.f / 216, // 2+
			215.f / 216, // 3+
			212.f / 216, // 4+
			205.f / 216, // 5+
			193.f / 216, // 6+
			174.f / 216, // 7+
			147.f / 216, // 8+
			113.f / 216, // 9+
			 77.f / 216, // 10+
			 43.f / 216, // 11+
			 16.f / 216, // 12+
			 16.f / 216, // 13+
			 16.f / 216, // 14+
			 16.f / 216, // 15+
			 16.f / 216, // 16+
			 16.f / 216, // 17+
			 16.f / 216, // 18+
			 16.f / 216  // >18+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit4d6dl(int r) {
		float[] ps = {
			1295.f / 1296, // <=0+
			1295.f / 1296, // 1+
			1295.f / 1296, // 2+
			1295.f / 1296, // 3+
			1295.f / 1296, // 4+
			1291.f / 1296, // 5+
			1281.f / 1296, // 6+
			1260.f / 1296, // 7+
			1222.f / 1296, // 8+
			1160.f / 1296, // 9+
			1069.f / 1296, // 10+
			 947.f / 1296, // 11+
			 799.f / 1296, // 12+
			 632.f / 1296, // 13+
			 460.f / 1296, // 14+
			 300.f / 1296, // 15+
			 169.f / 1296, // 16+
			  75.f / 1296, // 17+
			  21.f / 1296, // 18+
			  21.f / 1296, // 19+
			  21.f / 1296, // 20+
			  21.f / 1296, // 21+
			  21.f / 1296, // 22+
			  21.f / 1296, // 23+
			  21.f / 1296, // 24+
			  21.f / 1296  // >24+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit5d6dl(int r) {
		float[] ps = {
			7775.f / 7776, // <=0+
			7775.f / 7776, // 1+
			7775.f / 7776, // 2+
			7775.f / 7776, // 3+
			7775.f / 7776, // 4+
			7775.f / 7776, // 5+
			7770.f / 7776, // 6+
			7755.f / 7776, // 7+
			7720.f / 7776, // 8+
			7649.f / 7776, // 9+
			7519.f / 7776, // 10+
			7304.f / 7776, // 11+
			6979.f / 7776, // 12+
			6523.f / 7776, // 13+
			5928.f / 7776, // 14+
			5203.f / 7776, // 15+
			4378.f / 7776, // 16+
			3502.f / 7776, // 17+
			2637.f / 7776, // 18+
			1842.f / 7776, // 19+
			1172.f / 7776, // 20+
			 661.f / 7776, // 21+
			 316.f / 7776, // 22+
			 116.f / 7776, // 23+
			  26.f / 7776, // 24+
			  26.f / 7776, // 25+
			  26.f / 7776, // 26+
			  26.f / 7776, // 27+
			  26.f / 7776, // 28+
			  26.f / 7776, // 29+
			  26.f / 7776, // 30+
			  26.f / 7776  // >30+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit2d6dh(int r) {
		float[] ps = {
			25.f / 36, // <=0+
			25.f / 36, // 1+
			25.f / 36, // 2+
			16.f / 36, // 3+
			 9.f / 36, // 4+
			 4.f / 36, // 5+
			 1.f / 36, // 6+
			 0.f / 36, // 7+
			 0.f / 36, // 8+
			 0.f / 36, // 9+
			 0.f / 36, // 10+
			 0.f / 36, // 11+
			 0.f / 36, // 12+
			 0.f / 36  // >12+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit3d6dh(int r) {
		float[] ps = {
			200.f / 216, // <=0+
			200.f / 216, // 1+
			200.f / 216, // 2+
			200.f / 216, // 3+
			173.f / 216, // 4+
			139.f / 216, // 5+
			103.f / 216, // 6+
			 69.f / 216, // 7+
			 42.f / 216, // 8+
			 23.f / 216, // 9+
			 11.f / 216, // 10+
			  4.f / 216, // 11+
			  1.f / 216, // 12+
			  1.f / 216, // 13+
			  1.f / 216, // 14+
			  1.f / 216, // 15+
			  1.f / 216, // 16+
			  1.f / 216, // 17+
			  1.f / 216, // 18+
			  1.f / 216  // >18+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit4d6dh(int r) {
		float[] ps = {
			1275.f / 1296, // <=0+
			1275.f / 1296, // 1+
			1275.f / 1296, // 2+
			1275.f / 1296, // 3+
			1275.f / 1296, // 4+
			1221.f / 1296, // 5+
			1127.f / 1296, // 6+
			 996.f / 1296, // 7+
			 836.f / 1296, // 8+
			 664.f / 1296, // 9+
			 497.f / 1296, // 10+
			 349.f / 1296, // 11+
			 227.f / 1296, // 12+
			 136.f / 1296, // 13+
			  74.f / 1296, // 14+
			  36.f / 1296, // 15+
			  15.f / 1296, // 16+
			   5.f / 1296, // 17+
			   1.f / 1296, // 18+
			   1.f / 1296, // 19+
			   1.f / 1296, // 20+
			   1.f / 1296, // 21+
			   1.f / 1296, // 22+
			   1.f / 1296, // 23+
			   1.f / 1296, // 24+
			   1.f / 1296  // >24+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float hit5d6dh(int r) {
		float[] ps = {
			7750.f / 7776, // <=0+
			7750.f / 7776, // 1+
			7750.f / 7776, // 2+
			7750.f / 7776, // 3+
			7750.f / 7776, // 4+
			7750.f / 7776, // 5+
			7660.f / 7776, // 6+
			7460.f / 7776, // 7+
			7115.f / 7776, // 8+
			6604.f / 7776, // 9+
			5934.f / 7776, // 10+
			5139.f / 7776, // 11+
			4274.f / 7776, // 12+
			3398.f / 7776, // 13+
			2573.f / 7776, // 14+
			1848.f / 7776, // 15+
			1253.f / 7776, // 16+
			 797.f / 7776, // 17+
			 472.f / 7776, // 18+
			 257.f / 7776, // 19+
			 127.f / 7776, // 20+
			  56.f / 7776, // 21+
			  21.f / 7776, // 22+
			   6.f / 7776, // 23+
			   1.f / 7776, // 24+
			   1.f / 7776, // 25+
			   1.f / 7776, // 26+
			   1.f / 7776, // 27+
			   1.f / 7776, // 28+
			   1.f / 7776, // 29+
			   1.f / 7776, // 30+
			   1.f / 7776  // >30+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg1d6(int r) {
		float[] ps = {
			0.f / 6,	// 0
			1.f / 6,	// 1
			1.f / 6,	// 2
			1.f / 6,	// 3
			1.f / 6,	// 4
			1.f / 6,	// 5
			1.f / 6,	// 6
			0.f / 6		// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg2d6(int r) {
		float[] ps = {
			0.f / 36,	// 0
			0.f / 36,	// 1
			1.f / 36,	// 2
			2.f / 36,	// 3
			3.f / 36,	// 4
			4.f / 36,	// 5
			5.f / 36,	// 6
			6.f / 36,	// 7
			5.f / 36,	// 8
			4.f / 36,	// 9
			3.f / 36,	// 10
			2.f / 36,	// 11
			1.f / 36,	// 12
			0.f / 36	// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg3d6(int r) {
		float[] ps = {
			 0.f / 216,	// 0
			 0.f / 216,	// 1
			 0.f / 216,	// 2
			 1.f / 216,	// 3
			 3.f / 216,	// 4
			 6.f / 216,	// 5
			10.f / 216,	// 6
			15.f / 216,	// 7
			21.f / 216,	// 8
			25.f / 216,	// 9
			27.f / 216,	// 10
			27.f / 216,	// 11
			25.f / 216,	// 12
			21.f / 216,	// 13
			15.f / 216,	// 14
			10.f / 216,	// 15
			 6.f / 216,	// 16
			 3.f / 216,	// 17
			 1.f / 216, // 18
			 0.f / 216	// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg4d6(int r) {
		float[] ps = {
			  0.f / 1296,	// 0
			  0.f / 1296,	// 1
			  0.f / 1296,	// 2
			  0.f / 1296,	// 3
			  1.f / 1296,	// 4
			  4.f / 1296,	// 5
			 10.f / 1296,	// 6
			 20.f / 1296,	// 7
			 35.f / 1296,	// 8
			 56.f / 1296,	// 9
			 80.f / 1296,	// 10
			104.f / 1296,	// 11
			125.f / 1296,	// 12
			140.f / 1296,	// 13
			146.f / 1296,	// 14
			140.f / 1296,	// 15
			125.f / 1296,	// 16
			104.f / 1296,	// 17
			 80.f / 1296,	// 18
			 56.f / 1296,	// 19
			 35.f / 1296,	// 20
			 20.f / 1296,	// 21
			 10.f / 1296,	// 22
			  4.f / 1296,	// 23
			  1.f / 1296,	// 24
			  0.f / 1296,	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg5d6(int r) {
		float[] ps = {
			  0.f / 7776,		// 0
			  0.f / 7776,		// 1
			  0.f / 7776,		// 2
			  0.f / 7776,		// 3
			  0.f / 7776,		// 4
			  1.f / 7776,		// 5
			  5.f / 7776,		// 5
			 15.f / 7776,		// 5
			 35.f / 7776,		// 5
			 70.f / 7776,		// 5
			126.f / 7776,		// 10
			205.f / 7776,		// 11
			305.f / 7776,		// 11
			420.f / 7776,		// 11
			540.f / 7776,		// 11
			651.f / 7776,		// 11
			735.f / 7776,		// 11
			780.f / 7776,		// 11
			780.f / 7776,		// 11
			735.f / 7776,		// 11
			651.f / 7776,		// 20
			540.f / 7776,		// 20
			420.f / 7776,		// 20
			305.f / 7776,		// 20
			205.f / 7776,		// 20
			126.f / 7776,		// 20
			 70.f / 7776,		// 20
			 35.f / 7776,		// 20
			 15.f / 7776,		// 20
			  5.f / 7776,		// 20
			  1.f / 7776,		// 30
			  0.f / 7776 		// 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg1d6rr(int r) {
		float[] ps = {
			0.f / 36,			// 0
			3.f / 36,			// 1
			3.f / 36,			// 2
			3.f / 36,			// 3
			1.f / 6 + 3.f / 36,	// 4
			1.f / 6 + 3.f / 36,	// 5
			1.f / 6 + 3.f / 36,	// 6
			0.f					// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg2d6rr(int r) {
		float[] ps = {
						0.f / 1296,	// 0
						0.f / 1296,	// 1
					   15.f / 1296,	// 2
					   30.f / 1296,	// 3
					   45.f / 1296,	// 4
					   60.f / 1296,	// 5
					   75.f / 1296,	// 6
			6.f / 36 + 90.f / 1296,	// 7
			5.f / 36 + 75.f / 1296,	// 8
			4.f / 36 + 60.f / 1296,	// 9
			3.f / 36 + 45.f / 1296,	// 10
			2.f / 36 + 30.f / 1296,	// 11
			1.f / 36 + 15.f / 1296,	// 12
			1.f / 36 + 15.f / 1296,	// 12
							   0.f 	// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg3d6rr(int r) {
		float[] ps = {
									0.f,	// 0
									0.f,	// 1
									0.f,	// 2
						   81.f / 46656,	// 3
						  243.f / 46656,	// 4
						  486.f / 46656,	// 5
						  810.f / 46656,	// 6
						 1215.f / 46656,	// 7
						 1701.f / 46656,	// 8
						 2025.f / 46656,	// 9
			27.f / 216 + 2187.f / 46656,	// 10
			27.f / 216 + 2187.f / 46656,	// 11
			25.f / 216 + 2025.f / 46656,	// 12
			21.f / 216 + 1701.f / 46656,	// 13
			15.f / 216 + 1215.f / 46656,	// 14
			10.f / 216 +  810.f / 46656,	// 15
			 6.f / 216 +  486.f / 46656,	// 16
			 3.f / 216 +  243.f / 46656,	// 17
			 1.f / 216 +   81.f / 46656,	// 18
									0.f 	// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg4d6rr(int r) {
		float[] ps = {
										 0.f,	// 0
										 0.f,	// 1
										 0.f,	// 2
										 0.f,	// 3
							 575.f / 1679616,	// 4
							2300.f / 1679616,	// 5
							5750.f / 1679616,	// 6
						   11500.f / 1679616,	// 7
						   20125.f / 1679616,	// 8
						   32200.f / 1679616,	// 9
						   46000.f / 1679616,	// 10
						   59800.f / 1679616,	// 11
						   71875.f / 1679616,	// 12
						   80500.f / 1679616,	// 13
			146.f / 1296 + 83950.f / 1679616,	// 14
			140.f / 1296 + 80500.f / 1679616,	// 15
			125.f / 1296 + 71875.f / 1679616,	// 16
			104.f / 1296 + 59800.f / 1679616,	// 17
			 80.f / 1296 + 46000.f / 1679616,	// 18
			 56.f / 1296 + 32200.f / 1679616,	// 19
			 35.f / 1296 + 20125.f / 1679616,	// 20
			 20.f / 1296 + 11500.f / 1679616,	// 21
			 10.f / 1296 +  5750.f / 1679616,	// 22
			  4.f / 1296 +  2300.f / 1679616,	// 23
			  1.f / 1296 +   575.f / 1679616,	// 24
										 0.f 	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg5d6rr(int r) {
		float[] ps = {
											0.f,	// 0
											0.f,	// 1
											0.f,	// 2
											0.f,	// 3
											0.f,	// 4
							  3108.f / 60466176,	// 5
							 15540.f / 60466176,	// 5
							 46620.f / 60466176,	// 5
							108780.f / 60466176,	// 5
							217560.f / 60466176,	// 5
							391608.f / 60466176,	// 10
							637140.f / 60466176,	// 11
							947940.f / 60466176,	// 12
						   1305360.f / 60466176,	// 13
						   1678320.f / 60466176,	// 14
						   2023308.f / 60466176,	// 15
						   2284380.f / 60466176,	// 16
			780.f / 7776 + 2424240.f / 60466176,	// 17
			780.f / 7776 + 2424240.f / 60466176,	// 18
			735.f / 7776 + 2284380.f / 60466176,	// 19
			651.f / 7776 + 2023308.f / 60466176,	// 20
			540.f / 7776 + 1678320.f / 60466176,	// 21
			420.f / 7776 + 1305360.f / 60466176,	// 22
			305.f / 7776 +  947940.f / 60466176,	// 23
			205.f / 7776 +  637140.f / 60466176,	// 24
			126.f / 7776 +  391608.f / 60466176,	// 25
			 70.f / 7776 +  217560.f / 60466176,	// 26
			 35.f / 7776 +  108780.f / 60466176,	// 27
			 15.f / 7776 +   46620.f / 60466176,	// 28
			  5.f / 7776 +   15540.f / 60466176,	// 29
			  1.f / 7776 +    3108.f / 60466176,	// 30
											0.f		// 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg2d6dl(int r) {
		float[] ps = {
				  0.f,	// 0
			 1.f / 36,	// 1
			 3.f / 36,	// 2
			 5.f / 36,	// 3
			 7.f / 36,	// 4
			 9.f / 36,	// 5
			11.f / 36,	// 6
				  0.f,	// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg3d6dl(int r) {
		float[] ps = {
				   0.f,	// 0
				   0.f,	// 1
			 1.f / 216,	// 2
			 3.f / 216,	// 3
			 7.f / 216,	// 4
			12.f / 216,	// 5
			19.f / 216,	// 6
			27.f / 216,	// 7
			34.f / 216,	// 8
			36.f / 216,	// 9
			34.f / 216,	// 10
			27.f / 216,	// 11
			16.f / 216,	// 12
				   0.f 	// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg4d6dl(int r) {
		float[] ps = {
					 0.f,	// 0
					 0.f,	// 1
					 0.f,	// 2
			  1.f / 1296,	// 3
			  4.f / 1296,	// 4
			 10.f / 1296,	// 5
			 21.f / 1296,	// 6
			 38.f / 1296,	// 7
			 62.f / 1296,	// 8
			 91.f / 1296,	// 9
			122.f / 1296,	// 10
			148.f / 1296,	// 11
			167.f / 1296,	// 12
			172.f / 1296,	// 13
			160.f / 1296,	// 14
			131.f / 1296,	// 15
			 94.f / 1296,	// 16
			 54.f / 1296,	// 17
			 21.f / 1296,	// 18
					 0.f	// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmg5d6dl(int r) {
		float[] ps = {
					 0.f,	// 0
					 0.f,	// 1
					 0.f,	// 2
					 0.f,	// 3
			  1.f / 7776,	// 4
			  5.f / 7776,	// 5
			 15.f / 7776,	// 6
			 35.f / 7776,	// 7
			 71.f / 7776,	// 8
			130.f / 7776,	// 9
			215.f / 7776,	// 10
			325.f / 7776,	// 11
			456.f / 7776,	// 12
			595.f / 7776,	// 13
			725.f / 7776,	// 14
			825.f / 7776,	// 15
			876.f / 7776,	// 16
			865.f / 7776,	// 17
			795.f / 7776,	// 18
			670.f / 7776,	// 19
			511.f / 7776,	// 20
			345.f / 7776,	// 21
			200.f / 7776,	// 22
			 90.f / 7776,	// 23
			 26.f / 7776,	// 24
					 0.f	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum1d6(int r) {
		float[] ps = {
				0.f,	// 0
			6.f / 6,	// 1
			5.f / 6,	// 2
			4.f / 6,	// 3
			3.f / 6,	// 4
			2.f / 6,	// 5
			1.f / 6,	// 6
				0.f		// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum2d6(int r) {
		float[] ps = {
				  0.f,	// 0
				  0.f,	// 1
			36.f / 36,	// 2
			35.f / 36,	// 3
			33.f / 36,	// 4
			30.f / 36,	// 5
			26.f / 36,	// 6
			21.f / 36,	// 7
			15.f / 36,	// 8
			10.f / 36,	// 9
			 6.f / 36,	// 10
			 3.f / 36,	// 11
			 1.f / 36,	// 12
				  0.f	// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum3d6(int r) {
		float[] ps = {
					0.f,	// 0
					0.f,	// 1
					0.f,	// 2
			216.f / 216,	// 3
			215.f / 216,	// 4
			212.f / 216,	// 5
			206.f / 216,	// 6
			196.f / 216,	// 7
			181.f / 216,	// 8
			160.f / 216,	// 9
			135.f / 216,	// 10
			108.f / 216,	// 11
			 81.f / 216,	// 12
			 56.f / 216,	// 13
			 35.f / 216,	// 14
			 20.f / 216,	// 15
			 10.f / 216,	// 16
			  4.f / 216,	// 17
			  1.f / 216,	// 18
					0.f		// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum4d6(int r) {
		float[] ps = {
					  0.f,	// 0
					  0.f,	// 1
					  0.f,	// 2
					  0.f,	// 3
			1296.f / 1296,	// 4
			1295.f / 1296,	// 5
			1291.f / 1296,	// 6
			1281.f / 1296,	// 7
			1261.f / 1296,	// 8
			1226.f / 1296,	// 9
			1170.f / 1296,	// 10
			1090.f / 1296,	// 11
			 986.f / 1296,	// 12
			 861.f / 1296,	// 13
			 721.f / 1296,	// 14
			 575.f / 1296,	// 15
			 435.f / 1296,	// 16
			 310.f / 1296,	// 17
			 206.f / 1296,	// 18
			 126.f / 1296,	// 19
			  70.f / 1296,	// 20
			  35.f / 1296,	// 21
			  15.f / 1296,	// 22
			   5.f / 1296,	// 23
			   1.f / 1296,	// 24
					  0.f	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum5d6(int r) {
		float[] ps = {
					  0.f,	// 0
					  0.f,	// 1
					  0.f,	// 2
					  0.f,	// 3
					  0.f,	// 4
			7776.f / 7776,	// 5
			7775.f / 7776,	// 6
			7770.f / 7776,	// 7
			7755.f / 7776,	// 8
			7720.f / 7776,	// 9
			7650.f / 7776,	// 10
			7524.f / 7776,	// 11
			7319.f / 7776,	// 12
			7014.f / 7776,	// 13
			6594.f / 7776,	// 14
			6054.f / 7776,	// 15
			5403.f / 7776,	// 16
			4668.f / 7776,	// 17
			3888.f / 7776,	// 18
			3108.f / 7776,	// 19
			2373.f / 7776,	// 20
			1722.f / 7776,	// 21
			1182.f / 7776,	// 22
			 762.f / 7776,	// 23
			 457.f / 7776,	// 24
			 252.f / 7776,	// 25
			 126.f / 7776,	// 26
			  56.f / 7776,	// 27
			  21.f / 7776,	// 28
			   6.f / 7776,	// 29
			   1.f / 7776,	// 30
					  0.f	// 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum1d6rr(int r) {
		float[] ps = {
							0.f,	// 0
			3.f / 6 + 18.f / 36,	// 1
			3.f / 6 + 15.f / 36,	// 2
			3.f / 6 + 12.f / 36,	// 3
			3.f / 6 +  9.f / 36,	// 4
			2.f / 6 +  6.f / 36,	// 5
			1.f / 6 +  3.f / 36,	// 6
							0.f		// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum2d6rr(int r) {
		float[] ps = {
								 0.f,	// 0
								 0.f,	// 1
			21.f / 36 + 540.f / 1296,	// 2
			21.f / 36 + 525.f / 1296,	// 3
			21.f / 36 + 495.f / 1296,	// 4
			21.f / 36 + 450.f / 1296,	// 5
			21.f / 36 + 390.f / 1296,	// 6
			21.f / 36 + 315.f / 1296,	// 7
			15.f / 36 + 225.f / 1296,	// 8
			10.f / 36 + 150.f / 1296,	// 9
			 6.f / 36 +  90.f / 1296,	// 10
			 3.f / 36 +  45.f / 1296,	// 11
			 1.f / 36 +  15.f / 1296,	// 12
								 0.f	// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum3d6rr(int r) {
		float[] ps = {
									  0.f,	// 0
									  0.f,	// 1
									  0.f,	// 2
			135.f / 216 + 17496.f / 46656,	// 3
			135.f / 216 + 17415.f / 46656,	// 4
			135.f / 216 + 17172.f / 46656,	// 5
			135.f / 216 + 16686.f / 46656,	// 6
			135.f / 216 + 15876.f / 46656,	// 7
			135.f / 216 + 14661.f / 46656,	// 8
			135.f / 216 + 12960.f / 46656,	// 9
			135.f / 216 + 10935.f / 46656,	// 10
			108.f / 216 +  8748.f / 46656,	// 11
			 81.f / 216 +  6561.f / 46656,	// 12
			 56.f / 216 +  4536.f / 46656,	// 13
			 35.f / 216 +  2835.f / 46656,	// 14
			 20.f / 216 +  1620.f / 46656,	// 15
			 10.f / 216 +   810.f / 46656,	// 16
			  4.f / 216 +   324.f / 46656,	// 17
			  1.f / 216 +    81.f / 46656,	// 18
									  0.f	// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum4d6rr(int r) {
		float[] ps = {
										  0.f,	// 0
										  0.f,	// 1
										  0.f,	// 2
										  0.f,	// 3
			721.f / 1296 + 745200.f / 1679616,	// 4
			721.f / 1296 + 744625.f / 1679616,	// 5
			721.f / 1296 + 742325.f / 1679616,	// 6
			721.f / 1296 + 736575.f / 1679616,	// 7
			721.f / 1296 + 725075.f / 1679616,	// 8
			721.f / 1296 + 704950.f / 1679616,	// 9
			721.f / 1296 + 672750.f / 1679616,	// 10
			721.f / 1296 + 626750.f / 1679616,	// 11
			721.f / 1296 + 566950.f / 1679616,	// 12
			721.f / 1296 + 495075.f / 1679616,	// 13
			721.f / 1296 + 414575.f / 1679616,	// 14
			575.f / 1296 + 330625.f / 1679616,	// 15
			435.f / 1296 + 250125.f / 1679616,	// 16
			310.f / 1296 + 178250.f / 1679616,	// 17
			206.f / 1296 + 118450.f / 1679616,	// 18
			126.f / 1296 +  72450.f / 1679616,	// 19
			 70.f / 1296 +  40250.f / 1679616,	// 20
			 35.f / 1296 +  20125.f / 1679616,	// 21
			 15.f / 1296 +   8625.f / 1679616,	// 22
			  5.f / 1296 +   2875.f / 1679616,	// 23
			  1.f / 1296 +    575.f / 1679616,	// 24
										  0.f	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum5d6rr(int r) {
		float[] ps = {
											  0.f,	// 0
											  0.f,	// 1
											  0.f,	// 2
											  0.f,	// 3
											  0.f,	// 4
			4668.f / 7776 + 24167808.f / 60466176,	// 5
			4668.f / 7776 + 24164700.f / 60466176,	// 6
			4668.f / 7776 + 24149160.f / 60466176,	// 7
			4668.f / 7776 + 24102540.f / 60466176,	// 8
			4668.f / 7776 + 23993760.f / 60466176,	// 9
			4668.f / 7776 + 23776200.f / 60466176,	// 10
			4668.f / 7776 + 23384592.f / 60466176,	// 11
			4668.f / 7776 + 22747452.f / 60466176,	// 12
			4668.f / 7776 + 21799512.f / 60466176,	// 13
			4668.f / 7776 + 20494152.f / 60466176,	// 14
			4668.f / 7776 + 18815832.f / 60466176,	// 15
			4668.f / 7776 + 16792524.f / 60466176,	// 16
			4668.f / 7776 + 14508144.f / 60466176,	// 17
			3888.f / 7776 + 12083904.f / 60466176,	// 18
			3108.f / 7776 +  9659664.f / 60466176,	// 19
			2373.f / 7776 +  7375284.f / 60466176,	// 20
			1722.f / 7776 +  5351976.f / 60466176,	// 21
			1182.f / 7776 +  3673656.f / 60466176,	// 22
			 762.f / 7776 +  2368296.f / 60466176,	// 23
			 457.f / 7776 +  1420356.f / 60466176,	// 24
			 252.f / 7776 +   783216.f / 60466176,	// 25
			 126.f / 7776 +   391608.f / 60466176,	// 26
			  56.f / 7776 +   174048.f / 60466176,	// 27
			  21.f / 7776 +    65268.f / 60466176,	// 28
			   6.f / 7776 +    18648.f / 60466176,	// 29
			   1.f / 7776 +     3108.f / 60466176,	// 30
											  0.f	// 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum2d6dl(int r) {
		float[] ps = {
				  0.f,	// 0
			36.f / 36,	// 1
			35.f / 36,	// 2
			32.f / 36,	// 3
			27.f / 36,	// 4
			20.f / 36,	// 5
			11.f / 36,	// 6
				  0.f	// 7+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum3d6dl(int r) {
		float[] ps = {
					0.f,	// 0
					0.f,	// 1
			216.f / 216,	// 2
			215.f / 216,	// 3
			212.f / 216,	// 4
			205.f / 216,	// 5
			193.f / 216,	// 6
			174.f / 216,	// 7
			147.f / 216,	// 8
			113.f / 216,	// 9
			 77.f / 216,	// 10
			 43.f / 216,	// 11
			 16.f / 216,	// 12
					0.f		// 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum4d6dl(int r) {
		float[] ps = {
					  0.f,	// 0
					  0.f,	// 1
					  0.f,	// 2
			1296.f / 1296,	// 3
			1295.f / 1296,	// 4
			1291.f / 1296,	// 5
			1281.f / 1296,	// 6
			1260.f / 1296,	// 7
			1222.f / 1296,	// 8
			1160.f / 1296,	// 9
			1069.f / 1296,	// 10
			 947.f / 1296,	// 11
			 799.f / 1296,	// 12
			 632.f / 1296,	// 13
			 460.f / 1296,	// 14
			 300.f / 1296,	// 15
			 169.f / 1296,	// 16
			  75.f / 1296,	// 17
			  21.f / 1296,	// 18
					  0.f	// 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float dmgCum5d6dl(int r) {
		float[] ps = {
					  0.f,	// 0
					  0.f,	// 1
					  0.f,	// 2
					  0.f,	// 3
			7776.f / 7776,	// 4
			7775.f / 7776,	// 5
			7770.f / 7776,	// 6
			7755.f / 7776,	// 7
			7720.f / 7776,	// 8
			7649.f / 7776,	// 9
			7519.f / 7776,	// 10
			7304.f / 7776,	// 11
			6979.f / 7776,	// 12
			6523.f / 7776,	// 13
			5928.f / 7776,	// 14
			5203.f / 7776,	// 15
			4378.f / 7776,	// 16
			3502.f / 7776,	// 17
			2637.f / 7776,	// 18
			1842.f / 7776,	// 19
			1172.f / 7776,	// 20
			 661.f / 7776,	// 21
			 316.f / 7776,	// 22
			 116.f / 7776,	// 23
			  26.f / 7776,	// 24
					  0.f	// 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit2d6(int r) {
		float p = 0.f;
		
		switch (Math.max(2, r)) {
		case  2:
		case  3:
		case  4: p = 5.f / 36; break;
		case  5:
		case  6: p = 4.f / 36; break;
		case  7:
		case  8: p = 3.f / 36; break;
		case  9:
		case 10: p = 2.f / 36; break;
		default: p = 1.f / 36; break;
		}
		
		return p;
	}
	
	private float crit3d6(int r) {
		float p = 0.f;
		
		switch (Math.max(3, r)) {
		case  3:
		case  4: p = 95.f / 216; break;
		case  5: p = 92.f / 216; break;
		case  6: p = 86.f / 216; break;
		case  7: p = 82.f / 216; break;
		case  8: p = 73.f / 216; break;
		case  9: p = 64.f / 216; break;
		case 10: p = 57.f / 216; break;
		case 11: p = 48.f / 216; break;
		case 12: p = 39.f / 216; break;
		case 13: p = 32.f / 216; break;
		case 14: p = 23.f / 216; break;
		case 15: p = 14.f / 216; break;
		case 16: p = 10.f / 216; break;
		case 17: p =  4.f / 216; break;
		default: p =  1.f / 216; break;
		}
		
		return p;
	}
	
	private float crit4d6(int r) {
		float p = 0.f;

		switch (Math.max(4, r)) {
		case  4:
		case  5: p = 935.f / 1296; break;
		case  6: p = 931.f / 1296; break;
		case  7: p = 921.f / 1296; break;
		case  8: p = 901.f / 1296; break;
		case  9: p = 866.f / 1296; break;
		case 10: p = 810.f / 1296; break;
		case 11: p = 754.f / 1296; break;
		case 12: p = 674.f / 1296; break;
		case 13: p = 597.f / 1296; break;
		case 14: p = 505.f / 1296; break;
		case 15: p = 431.f / 1296; break;
		case 16: p = 339.f / 1296; break;
		case 17: p = 262.f / 1296; break;
		case 18: p = 182.f / 1296; break;
		case 19: p = 126.f / 1296; break;
		case 20: p =  70.f / 1296; break;
		case 21: p =  35.f / 1296; break;
		case 22: p =  15.f / 1296; break;
		case 23: p =   5.f / 1296; break;
		default: p =   1.f / 1296; break;
		}

		return p;
	}

	private float crit5d6(int r) {
		float[] ps = {
			7055.f / 7776, // <=0+
			7055.f / 7776, // 1+
			7055.f / 7776, // 2+
			7055.f / 7776, // 3+
			7055.f / 7776, // 4+
			7055.f / 7776, // 5+
			7055.f / 7776, // 6+
			7050.f / 7776, // 7+
			7035.f / 7776, // 8+
			7000.f / 7776, // 9+
			6930.f / 7776, // 10+
			6804.f / 7776, // 11+
			6599.f / 7776, // 12+
			6294.f / 7776, // 13+
			5874.f / 7776, // 14+
			5334.f / 7776, // 15+
			4803.f / 7776, // 16+
			4188.f / 7776, // 17+
			3528.f / 7776, // 18+
			2868.f / 7776, // 19+
			2253.f / 7776, // 20+
			1722.f / 7776, // 21+
			1182.f / 7776, // 22+
			 762.f / 7776, // 23+
			 457.f / 7776, // 24+
			 252.f / 7776, // 25+
			 126.f / 7776, // 26+
			  56.f / 7776, // 27+
			  21.f / 7776, // 28+
			   6.f / 7776, // 29+
			   1.f / 7776, // 30+
			   1.f / 7776  // 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit2d6r(int r) {
		float ps[] = {
			5.f / 36 +  5.f / 1296, // <=0+
			5.f / 36 +  5.f / 1296, // 1+
			5.f / 36 +  5.f / 1296, // 2+
			5.f / 36 +  5.f / 1296, // 3+
			5.f / 36 + 15.f / 1296, // 4+
			4.f / 36 + 24.f / 1296, // 5+
			4.f / 36 + 40.f / 1296, // 6+
			3.f / 36 + 45.f / 1296, // 7+
			3.f / 36 + 63.f / 1296, // 8+
			2.f / 36 + 52.f / 1296, // 9+
			2.f / 36 + 60.f / 1296, // 10+
			1.f / 36 + 33.f / 1296, // 11+
			1.f / 36 + 35.f / 1296, // 12+
			1.f / 36 + 35.f / 1296  // 13+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit3d6r(int r) {
		float ps[] = {
			95.f / 216 +   95.f / 46656, // <=0+
			95.f / 216 +   95.f / 46656, // 1+
			95.f / 216 +   95.f / 46656, // 2+
			95.f / 216 +   95.f / 46656, // 3+
			95.f / 216 +   95.f / 46656, // 4+
			92.f / 216 +  368.f / 46656, // 5+
			86.f / 216 +  860.f / 46656, // 6+
			82.f / 216 + 1640.f / 46656, // 7+
			73.f / 216 + 2555.f / 46656, // 8+
			64.f / 216 + 3584.f / 46656, // 9+
			57.f / 216 + 4617.f / 46656, // 10+
			48.f / 216 + 5184.f / 46656, // 11+
			39.f / 216 + 5265.f / 46656, // 12+
			32.f / 216 + 5120.f / 46656, // 13+
			23.f / 216 + 4163.f / 46656, // 14+
			14.f / 216 + 2744.f / 46656, // 15+
			10.f / 216 + 2060.f / 46656, // 16+
			 4.f / 216 +  848.f / 46656, // 17+
			 1.f / 216 +  215.f / 46656, // 18+
			 1.f / 216 +  215.f / 46656  // 19+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit3d6dl(int r) {
		float[] ps = {
			50.f / 216, // <=0+
			50.f / 216, // 1+
			50.f / 216, // 2+
			50.f / 216, // 3+
			50.f / 216, // 4+
			46.f / 216, // 5+
			46.f / 216, // 6+
			39.f / 216, // 7+
			39.f / 216, // 8+
			29.f / 216, // 9+
			29.f / 216, // 10+
			16.f / 216, // 11+
			16.f / 216, // 12+
			16.f / 216, // 13+
			16.f / 216, // 14+
			16.f / 216, // 15+
			16.f / 216, // 16+
			16.f / 216, // 17+
			16.f / 216, // 18+
			16.f / 216  // 19+
		};
		
		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit3d6dh(int r) {
		float[] ps = {
			35.f / 216, // <=0+
			35.f / 216, // 1+
			35.f / 216, // 2+
			35.f / 216, // 3+
			35.f / 216, // 4+
			22.f / 216, // 5+
			22.f / 216, // 6+
			12.f / 216, // 7+
			12.f / 216, // 8+
			 5.f / 216, // 9+
			 5.f / 216, // 10+
			 1.f / 216, // 11+
			 1.f / 216, // 12+
			 1.f / 216, // 13+
			 1.f / 216, // 14+
			 1.f / 216, // 15+
			 1.f / 216, // 16+
			 1.f / 216, // 17+
			 1.f / 216, // 18+
			 1.f / 216  // 19+
		};
		
		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit4d6r(int r) {
		float ps[] = {
			935.f / 1296 +    935.f / 1679616, // <=0+
			935.f / 1296 +    935.f / 1679616, // 1+
			935.f / 1296 +    935.f / 1679616, // 2+
			935.f / 1296 +    935.f / 1679616, // 3+
			935.f / 1296 +    935.f / 1679616, // 4+
			935.f / 1296 +    935.f / 1679616, // 5+
			931.f / 1296 +   4655.f / 1679616, // 6+
			921.f / 1296 +  13815.f / 1679616, // 7+
			901.f / 1296 +  31535.f / 1679616, // 8+
			866.f / 1296 +  60620.f / 1679616, // 9+
			810.f / 1296 + 102060.f / 1679616, // 10+
			754.f / 1296 + 155324.f / 1679616, // 11+
			674.f / 1296 + 208940.f / 1679616, // 12+
			597.f / 1296 + 259695.f / 1679616, // 13+
			505.f / 1296 + 290375.f / 1679616, // 14+
			431.f / 1296 + 310751.f / 1679616, // 15+
			340.f / 1296 + 292740.f / 1679616, // 16+
			262.f / 1296 + 258332.f / 1679616, // 17+
			182.f / 1296 + 198380.f / 1679616, // 18+
			126.f / 1296 + 147420.f / 1679616, // 19+
			 70.f / 1296 +  85820.f / 1679616, // 20+
			 35.f / 1296 +  44135.f / 1679616, // 21+
			 15.f / 1296 +  19215.f / 1679616, // 22+
			  5.f / 1296 +   6455.f / 1679616, // 23+
			  1.f / 1296 +   1295.f / 1679616, // 24+
			  1.f / 1296 +   1295.f / 1679616  // 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit5d6r(int r) {
		float[] ps = {
			7055.f / 7776 +     7055.f / 60466176, // <=0+
			7055.f / 7776 +     7055.f / 60466176, // 1+
			7055.f / 7776 +     7055.f / 60466176, // 2+
			7055.f / 7776 +     7055.f / 60466176, // 3+
			7055.f / 7776 +     7055.f / 60466176, // 4+
			7055.f / 7776 +     7055.f / 60466176, // 5
			7055.f / 7776 +     7055.f / 60466176, // 6
			7050.f / 7776 +    42300.f / 60466176, // 7
			7035.f / 7776 +   147735.f / 60466176, // 8
			7000.f / 7776 +   392000.f / 60466176, // 9
			6930.f / 7776 +   873180.f / 60466176, // 10
			6804.f / 7776 +  1714608.f / 60466176, // 11
			6599.f / 7776 +  3015743.f / 60466176, // 12
			6294.f / 7776 +  4796028.f / 60466176, // 13
			5874.f / 7776 +  6943068.f / 60466176, // 14
			5334.f / 7776 +  9185148.f / 60466176, // 15
			4803.f / 7776 + 11397519.f / 60466176, // 16
			4188.f / 7776 + 13016304.f / 60466176, // 17
			3528.f / 7776 + 13716864.f / 60466176, // 18
			2868.f / 7776 + 13387824.f / 60466176, // 19
			2253.f / 7776 + 12172959.f / 60466176, // 20
			1722.f / 7776 + 10424988.f / 60466176, // 21
			1182.f / 7776 +  7794108.f / 60466176, // 22
			 762.f / 7776 +  5344668.f / 60466176, // 23
			 457.f / 7776 +  3344783.f / 60466176, // 24
			 252.f / 7776 +  1896048.f / 60466176, // 25
			 126.f / 7776 +   963900.f / 60466176, // 26
			  56.f / 7776 +   432320.f / 60466176, // 27
			  21.f / 7776 +   162855.f / 60466176, // 28
			   6.f / 7776 +    46620.f / 60466176, // 29
			   1.f / 7776 +     7775.f / 60466176, // 30
			   1.f / 7776 +     7775.f / 60466176  // 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit4d6dl(int r) {
		float[] ps = {
			695.f / 1296, // <=0+
			695.f / 1296, // 1+
			695.f / 1296, // 2+
			695.f / 1296, // 3+
			695.f / 1296, // 4+
			691.f / 1296, // 5+
			681.f / 1296, // 6+
			672.f / 1296, // 7+
			646.f / 1296, // 8+
			608.f / 1296, // 9+
			577.f / 1296, // 10+
			515.f / 1296, // 11+
			451.f / 1296, // 12+
			392.f / 1296, // 13+
			316.f / 1296, // 14+
			216.f / 1296, // 15+
			169.f / 1296, // 16+
			 75.f / 1296, // 17+
			 21.f / 1296, // 18+
			 21.f / 1296, // 19+
			 21.f / 1296, // 20+
			 21.f / 1296, // 21+
			 21.f / 1296, // 22+
			 21.f / 1296, // 23+
			 21.f / 1296, // 24+
			 21.f / 1296  // 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit5d6dl(int r) {
		float[] ps = {
			6155.f / 7776, // <=0+
			6155.f / 7776, // 1+
			6155.f / 7776, // 2+
			6155.f / 7776, // 3+
			6155.f / 7776, // 4+
			6155.f / 7776, // 5+
			6150.f / 7776, // 6+
			6135.f / 7776, // 7+
			6100.f / 7776, // 8+
			6029.f / 7776, // 9+
			5899.f / 7776, // 10+
			5744.f / 7776, // 11+
			5479.f / 7776, // 12+
			5143.f / 7776, // 13+
			4668.f / 7776, // 14+
			4243.f / 7776, // 15+
			3658.f / 7776, // 16+
			3022.f / 7776, // 17+
			2337.f / 7776, // 18+
			1842.f / 7776, // 19+
			1172.f / 7776, // 20+
			 661.f / 7776, // 21+
			 316.f / 7776, // 22+
			 116.f / 7776, // 23+
			  26.f / 7776, // 24+
			  26.f / 7776, // 25+
			  26.f / 7776, // 26+
			  26.f / 7776, // 27+
			  26.f / 7776, // 28+
			  26.f / 7776, // 29+
			  26.f / 7776, // 30+
			  26.f / 7776  // 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit4d6dh(int r) {
		float[] ps = {
			675.f / 1296, // <=0+
			675.f / 1296, // 1+
			675.f / 1296, // 2+
			675.f / 1296, // 3+
			675.f / 1296, // 4+
			621.f / 1296, // 5+
			527.f / 1296, // 6+
			480.f / 1296, // 7+
			380.f / 1296, // 8+
			304.f / 1296, // 9+
			245.f / 1296, // 10+
			181.f / 1296, // 11+
			119.f / 1296, // 12+
			 88.f / 1296, // 13+
			 50.f / 1296, // 14+
			 24.f / 1296, // 15+
			 15.f / 1296, // 16+
			  5.f / 1296, // 17+
			  1.f / 1296, // 18+
			  1.f / 1296, // 19+
			  1.f / 1296, // 20+
			  1.f / 1296, // 21+
			  1.f / 1296, // 22+
			  1.f / 1296, // 23+
			  1.f / 1296, // 24+
			  1.f / 1296  // 25+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}

	private float crit5d6dh(int r) {
		float[] ps = {
			6130.f / 7776, // <=0+
			6130.f / 7776, // 1+
			6130.f / 7776, // 2+
			6130.f / 7776, // 3+
			6130.f / 7776, // 4+
			6130.f / 7776, // 5+
			6040.f / 7776, // 6+
			5840.f / 7776, // 7+
			5495.f / 7776, // 8+
			4984.f / 7776, // 9+
			4314.f / 7776, // 10+
			3819.f / 7776, // 11+
			3134.f / 7776, // 12+
			2498.f / 7776, // 13+
			1913.f / 7776, // 14+
			1488.f / 7776, // 15+
			1013.f / 7776, // 16+
			 677.f / 7776, // 17+
			 412.f / 7776, // 18+
			 257.f / 7776, // 19+
			 127.f / 7776, // 20+
			  56.f / 7776, // 21+
			  21.f / 7776, // 22+
			   6.f / 7776, // 23+
			   1.f / 7776, // 24+
			   1.f / 7776, // 25+
			   1.f / 7776, // 26+
			   1.f / 7776, // 27+
			   1.f / 7776, // 28+
			   1.f / 7776, // 29+
			   1.f / 7776, // 30+
			   1.f / 7776  // 31+
		};

		return ps[Math.min(ps.length - 1, Math.max(0, r))];
	}
}

